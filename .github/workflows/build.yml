name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle and analyze with Sonarqube
        run: clientSecret=${{secrets.clientSecret}} redirectURL=${{secrets.redirectURL}} SPRING_DATASOURCE_PASSWORD=${{secrets.SPRING_DATASOURCE_PASSWORD}} SPRING_DATASOURCE_URL=${{secrets.SPRING_DATASOURCE_URL}} SPRING_DATASOURCE_USERNAME=${{secrets.SPRING_DATASOURCE_URL}} GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}} SONAR_TOKEN=${{secrets.SONAR_TOKEN}} ./gradlew clean build sonarqube --info
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.dockerhub_username }}
          DOCKER_PASSWORD: ${{ secrets.dockerhub_password }}
        run : docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" docker.io
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{secrets.dockerhub_username}}/${{secrets.repo_name}}:${{github.sha}}
      - name: Publish dockerimage to docker hub
        run: docker push ${{secrets.dockerhub_username}}/${{secrets.repo_name}}:${{github.sha}}
      - name: Build Docker image with latest tag
        run: docker build . --file Dockerfile --tag ${{secrets.dockerhub_username}}/${{secrets.repo_name}}:latest
      - name: Publish dockerimage to docker hub
        run: docker push ${{secrets.dockerhub_username}}/${{secrets.repo_name}}:latest
